@page "/prestamo/{idprestamo:int}"
@rendermode InteractiveServer

<Modal @ref="modal" IsVerticallyCentered="true" UseStaticBackdrop="true" CloseOnEscape="false" ShowCloseButton="false" />

@if (NombreCliente == "")
{
    <hr>
    <div class="d-flex justify-content-center">
        <p><em>Cargando datos...</em></p>
        <Spinner Type="SpinnerType.Border" Class="ms-auto" Color="SpinnerColor.Success" Size="SpinnerSize.ExtraLarge" />
    </div>
    <hr>
}

<div class="bienvenido">
    <h4>Bienvenido @NombreCliente</h4>
</div>

<div class="titulo">
    <h2>
        Información detallada sobre el préstamo
    </h2>
</div>


<article>
    <h3>Prestamo a detalle</h3>

    <Grid TItem="Prestamo" class="table table-hover table-bordered table-striped" DataProvider="PrestamoDataProvider" EmptyText="No hay algún préstamo para mostrar">

        <GridColumn TItem="Prestamo" HeaderText="Id">
            @context.Id
        </GridColumn>
        <GridColumn TItem="Prestamo" HeaderText="Fecha de solicitud">
            @context.Fecha.ToLocalTime()
        </GridColumn>
        <GridColumn TItem="Prestamo" HeaderText="Número de cuotas">
            @context.NumeroCuotas
        </GridColumn>
        <GridColumn TItem="Prestamo" HeaderText="Monto cuota">
            @Math.Round(context.CuotaMensual, 2)
        </GridColumn>

        <GridColumn TItem="Prestamo" HeaderText="Monto total prestado">
            @Math.Round(context.MontoTotal, 2)

        </GridColumn>

        <GridColumn TItem="Prestamo" HeaderText="Estado del préstamo" TextNoWrap="true">
            @context.Estado.Nombre
        </GridColumn>
    </Grid>

    <h5>Monto pendiente total: @Math.Round(MontoPendiente, 2)</h5>
</article>

<article>
    <h3>Cuotas del préstamo</h3>

    <Grid TItem="Cuota" class="table table-hover table-bordered table-striped" DataProvider="CuotasDataProvider" EmptyText="No hay ninguna cuota para mostrar">

        <GridColumn TItem="Cuota" HeaderText="Id">
            @context.Id
        </GridColumn>
        <GridColumn TItem="Cuota" HeaderText="Fecha tope para pagar">
            @context.Fecha.ToLocalTime()
        </GridColumn>
        <GridColumn TItem="Cuota" HeaderText="Fecha pago realizado" TextNoWrap="true">
            @if (context.FechaPago == DateTime.MinValue)
            {
                <p>Pago no registrado</p>
            }
            else
            {
                @context.FechaPago.ToLocalTime()
            }
        </GridColumn>
        <GridColumn TItem="Cuota" HeaderText="Monto del pago" TextNoWrap="true">
            @Math.Round(context.Pago, 2)
        </GridColumn>
    </Grid>
</article>



<article>
    <h3>Historial de pago</h3>

    <Grid TItem="Pago" class="table table-hover table-bordered table-striped" DataProvider="PagosDataProvider" EmptyText="No hay ningún pago para mostrar">

        <GridColumn TItem="Pago" HeaderText="Id del pago">
            @context.Id
        </GridColumn>
        <GridColumn TItem="Pago" HeaderText="Id de la cuota pagada">
            @context.CuotaPagada.Id
        </GridColumn>
        <GridColumn TItem="Pago" HeaderText="Monto" TextNoWrap="true">
            @Math.Round(context.CuotaPagada.prestamo.CuotaMensual, 2)
        </GridColumn>

        <GridColumn TItem="Pago" HeaderText="Fecha pago realizado" TextNoWrap="true">
            @context.CuotaPagada.FechaPago.ToLocalTime()
        </GridColumn>
    </Grid>
</article>


<article>
    <h3>Documentos subidos</h3>
    <table>
        <tr>
            <th>Documento de identidad</th>
            <th>Recibo de trabajo</th>
        </tr>
        <tr>
            @foreach (var documento in documentos)
            {
                <td>
                    <img src="data:image;base64, @System.Convert.ToBase64String(documento.documento)" alt="">
                </td>
            }
        </tr>
    </table>
</article>