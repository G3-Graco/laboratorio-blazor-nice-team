@page "/solicitarprestamo"
@rendermode InteractiveServer
@using Tewr.Blazor.FileReader;
@inject IFileReaderService fileReader;

<h3>Solicitud de préstamo</h3>

<hr>

<Modal @ref="modal" IsVerticallyCentered="true" UseStaticBackdrop="true" CloseOnEscape="false" />

<EditForm Model="@prestamo" OnValidSubmit="Solicitar">
	<DataAnnotationsValidator />
    <div>
        <label for="Sueldo">Sueldo básico: </label>
        <InputNumber name="Sueldo" id="Sueldo" @bind-Value="Sueldo" min="0" placeholder="100" required />
    </div>
    <div>
        <label for="Monto">Monto a prestar: </label>
        <InputNumber id="Monto" @bind-Value="prestamo.MontoTotal" min="0" placeholder="40" required />
        <span class="rojo">No puede puede ser mayor al triple de su sueldo básico</span>
    </div>
    <div>
        <label for="Plazos">Cantidad de plazos: </label>
        <InputNumber id="Plazos" @bind-Value="prestamo.NumeroCuotas" min="0" placeholder="13" required/>
        <span class="rojo">Afectará el interés: 1-12 (20%) y 13-24 (30%)</span>
    </div>
    <article class="separacion">
        <div>
            <label for="Empleo">Tiempo de empleo (meses): </label>
            <InputNumber name="Empleo" id="Empleo" @bind-Value="Empleo" min="0" placeholder="13" required />
        </div>
        <div>
            <label for="Identidad">Documento de identidad: </label>
            <InputFile name="Identidad" id="Identidad" OnChange="@CargarIdentidad" />
        </div>
        <div>
            <label for="Trabajo">Recibo de sueldo de trabajo: </label>
            <InputFile name="Trabajo" id="Trabajo" OnChange="@CargarTrabajo" />
        </div>
    </article>
    <div class="boton">
        <button type="submit">Hacer solicitud</button>
    </div>
	<ValidationSummary />
</EditForm>

<p>@problema</p>



<input type="file" @ref="elementReference" @onchange="async () => await OpenFileAsync()"/>
<p>Nombre de archivo: @fileName</p>
<p>Tamaño: @size</p>
<p>Tipo: @type</p>

<Button @onclick="async () => await UploadFileAsync()">Subir imagen</Button>




@code {

    ElementReference elementReference;
    string message = string.Empty;
    string imgPath = null;

    string fileName = string.Empty;
    string type = string.Empty;
    string size = string.Empty;

    Stream fileStream = null;

    async Task OpenFileAsync()
    {
        var file = (await fileReader.CreateReference(elementReference).EnumerateFilesAsync()).FirstOrDefault();

        if (file == null)
        {
            problema = "No tiene un archivo";
            return;
        }

        var fileInfo = await file.ReadFileInfoAsync();
        fileName = fileInfo.Name;
        size = $"{fileInfo.Size}";
        type = fileInfo.Type;

        using (var memoryStream = await file.CreateMemoryStreamAsync((int)fileInfo.Size))
        {
            fileStream = new MemoryStream(memoryStream.ToArray());
        }
    }

    async Task UploadFileAsync()
    {
        string url = "https://localhost:7181/api/Documento/CargarArchivo";

        var content = new MultipartFormDataContent();
        content.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue("form-data");

        content.Add(new StreamContent(fileStream, (int)fileStream.Length), "image", fileName);
        HttpClient httpClient = new HttpClient();

        var response = httpClient.PostAsync(url, content);

        message = "Imagen guardada con éxito";

        problema = "Se agregó el archivo";
    }
}